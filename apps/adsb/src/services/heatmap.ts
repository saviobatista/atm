import { log } from "console";
import { workerData, parentPort } from "worker_threads";
import { polygon } from "@turf/turf";
import parseHeat from "./parse-heat";
const out = polygon([
  [
    [-47.14717986998959, -22.998629623249226],
    [-47.14841712141666, -22.9998693623439],
    [-47.12321493636139, -23.017988925787563],
    [-47.12205442406751, -23.01662609513338],
    [-47.14717986998959, -22.998629623249226],
  ],
]);
const rwy = polygon([
  [
    [-22.998268, -47.146876],
    [-22.99861, -47.147161],
    [-23.016567, -47.122126],
    [-23.016202, -47.121822],
    [-22.998268, -47.146876],
  ],
]);
const z15 = polygon([
  [
    [-47.122124637880184, -23.01656718344833],
    [-47.12744930456177, -23.02358422024569],
    [-47.11687387122577, -23.03483054085688],
    [-47.09685275354766, -23.011844909374442],
    [-47.121821647754636, -23.016199435589993],
    [-47.122124637880184, -23.01656718344833],
  ],
]);
const z33 = polygon([
  [
    [-47.14687218052257, -22.99827014010319],
    [-47.14718146356129, -22.998632426690868],
    [-47.15259779407874, -23.004475158351553],
    [-47.17298922950659, -22.997908916737693],
    [-47.154229197182595, -22.979413517248016],
    [-47.14687218052257, -22.99827014010319],
  ],
]);
const worker = async () => {
  const { file, dir, aerodrome } = workerData;
  log(`Worker para ${file}`);

  log(`${new Date().toISOString()} - ${file}: Processando Basestation`);
  parentPort?.postMessage(await parseHeat(file, dir, aerodrome));
};

worker();
