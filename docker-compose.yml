version: "3"
volumes:
  backup:
  db:
  queue:
services:
  queue:
    image: rabbitmq:3-management-alpine
    container_name: queue
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - atm
  producer:
    build:
      context: ./apps/producer
      dockerfile: Dockerfile.producer
    container_name: producer
    environment:
      - RABBITMQ_SERVER=amqp://guest:guest@queue:5672
      - HOSTS=10.55.19.240
    volumes:
      - /data/adsbqueue:/data
    depends_on:
      - queue
    links: 
      - queue
    command: >
      sh -c "dockerize -wait tcp://queue:5672 -timeout 300s &&
             cargo run"
    networks:
      - atm
  consumer:
    build:
      context: ./apps/consumer
      dockerfile: Dockerfile.consumer
    container_name: consumer
    environment:
      - RABBITMQ_SERVER=amqp://guest:guest@queue:5672
      - HOSTS=10.55.19.240
    depends_on:
      - queue
    links: 
      - queue
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      sh -c "dockerize -wait tcp://queue:5672 -timeout 300s &&
             cargo run"
    networks:
      - atm
    dns:
      - 192.168.1.1
  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - db:/data/db
    command: --replSet rs0
  db:
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    container_name: db
    build:
      context: .
      dockerfile: ./apps/db/Dockerfile
    ports:
      - "1433:1433"
    restart: always
    environment:
      SA_PASSWORD: "NavTakp190!"
      ACCEPT_EULA: "Y"
    volumes:
      - /data/tatic:/backup:z
      - /data/db:/var/opt/mssql/data:z
    networks:
      - atm
  samba:
    container_name: samba
    image: dperson/samba
    networks:
      - default
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    read_only: false
    tmpfs:
      - /tmp
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - /data/tatic:/data/tatic:z
    command: '-p -s "backup;/data/tatic;yes;no;no;all;none"'
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    ports:
      - 3000:3000
    networks:
      - atm
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    restart: always
    ports:
      - 3001:3001
    networks:
      - atm
networks:
  atm:
    external: true
